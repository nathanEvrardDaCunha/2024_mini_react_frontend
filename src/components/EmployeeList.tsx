import React, { useEffect, useState } from 'react';import axios from 'axios';import Cookies from 'js-cookie';import EmployeeTable from './EmployeeTable';import LoadingSpinner from './LoadingSpinner';import ErrorMessage from './ErrorMessage';interface Employee {	id: string;	firstName: string;	lastName: string;	email: string;}const EmployeeList = () => {	const [employees, setEmployees] = useState<Employee[]>([]);	const [loading, setLoading] = useState(true);	const [error, setError] = useState<string | null>(null);	const [userId, setUserId] = useState<string | null>(null);		useEffect(() => {		fetchEmployees();		const userIdFromCookie = Cookies.get('userId');		setUserId(userIdFromCookie || null);	}, []);		const fetchEmployees = async () => {		try {			const response = await axios.get('http://localhost:3000/employee');			setEmployees(response.data);			setLoading(false);		} catch (error) {			setError('Error fetching employees');			setLoading(false);		}	};		const deleteEmployee = async (employeeId: string) => {		if (employeeId === userId) {			setError('You cannot delete your own account');			return;		}				try {			await axios.delete(`http://localhost:3000/employee/${employeeId}`);			setEmployees((prevEmployees) =>				prevEmployees.filter((employee) => employee.id !== employeeId)			);			setError(null);		} catch (error) {			setError('Error deleting employee');		}	};		if (loading) {		return <LoadingSpinner />;	}		return (		<div className="container my-5">			<h2 className="text-center mt-5 mb-4">Employee List</h2>			{error && <ErrorMessage message={error} />}			<EmployeeTable employees={employees} onDelete={deleteEmployee} />		</div>	);};export default EmployeeList;